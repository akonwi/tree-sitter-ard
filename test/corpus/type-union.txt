==================
type union
==================

type Shape = Square|Circle

match some_shape {
  Square => {
    print("Square size: {{some_shape.size.as_str}}")
  },
  Circle => {
    print("Circle radius: {{some_shape.radius.as_str}}")
  }
}
---

(program
  (statement
    (type_declaration
      (identifier)
      (assign)
      (type_union
        (type
          (identifier))
        (type
          (identifier)))))
  (statement
    (expression
      (match_expression
        (expression
          (identifier))
        (match_case
          (identifier)
          (block
            (statement
              (expression
                (function_call
                  (identifier)
                  (paren_arguments
                    (expression
                      (primitive_value
                        (string
                          (string_content)
                          (string_interpolation
                            (expression
                              (member_access
                                (expression
                                  (member_access
                                    (expression
                                      (identifier))
                                    (period)
                                    (identifier)))
                                (period)
                                (identifier)))))))))))))
        (match_case
          (identifier)
          (block
            (statement
              (expression
                (function_call
                  (identifier)
                  (paren_arguments
                    (expression
                      (primitive_value
                        (string
                          (string_content)
                          (string_interpolation
                            (expression
                              (member_access
                                (expression
                                  (member_access
                                    (expression
                                      (identifier))
                                    (period)
                                    (identifier)))
                                (period)
                                (identifier)))))))))))))))))
