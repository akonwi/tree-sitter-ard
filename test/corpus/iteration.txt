==================
iteration
==================

for i in 1..10 {
	io::print(i.to_str())
}

for i in 1..(something - other) {
	io::print(i.to_str())
}
---

(program
  (statement
    (for_in_loop
      cursor: (identifier)
      range: (expression
        expr: (range_expression
          start: (expression
            expr: (primitive_value
              primitive: (number)))
          operator: (inclusive_range)
          end: (expression
            expr: (primitive_value
              primitive: (number)))))
      body: (block
        (statement
          (expression
            expr: (member_access
              target: (expression
                expr: (identifier))
              operator: (double_colon)
              member: (function_call
                target: (identifier)
                arguments: (paren_arguments
                  argument: (expression
                    expr: (member_access
                      target: (expression
                        expr: (identifier))
                      operator: (period)
                      member: (function_call
                        target: (identifier)
                        arguments: (paren_arguments))))))))))))
  (statement
    (for_in_loop
      cursor: (identifier)
      range: (expression
        expr: (range_expression
          start: (expression
            expr: (primitive_value
              primitive: (number)))
          operator: (inclusive_range)
          end: (expression
            expr: (paren_expression
              expr: (expression
                expr: (binary_expression
                  left: (expression
                    expr: (identifier))
                  operator: (minus)
                  right: (expression
                    expr: (identifier))))))))
      body: (block
        (statement
          (expression
            expr: (member_access
              target: (expression
                expr: (identifier))
              operator: (double_colon)
              member: (function_call
                target: (identifier)
                arguments: (paren_arguments
                  argument: (expression
                    expr: (member_access
                      target: (expression
                        expr: (identifier))
                      operator: (period)
                      member: (function_call
                        target: (identifier)
                        arguments: (paren_arguments)))))))))))))