==================
While Loop
==================

while count <= 9 {
	count =+ 1
}

while is_true or count > 0 {
	count =- 1
}

---

(program
  (statement
    (while_loop
      condition: (expression
        (binary_expression
          left: (expression
            (identifier))
          operator: (less_than_or_equal)
          right: (expression
            (primitive_value
              primitive: (number)))))
      body: (block
        (statement
          (reassignment
            target: (identifier)
            operator: (increment)
            value: (expression
              (primitive_value
                primitive: (number))))))))
  (statement
    (while_loop
      condition: (expression
        (binary_expression
          left: (expression
            (identifier))
          operator: (or)
          right: (expression
            (binary_expression
              left: (expression
                (identifier))
              operator: (greater_than)
              right: (expression
                (primitive_value
                  primitive: (number)))))))
      body: (block
        (statement
          (reassignment
            target: (identifier)
            operator: (decrement)
            value: (expression
              (primitive_value
                primitive: (number)))))))))

==================
For Loop
==================

for mut count = 0; count <= 9; count = count + 1 {
  foobar
}

---

(program
  (statement
    (for_loop
      (variable_definition
        (variable_binding)
        (identifier)
        (assign)
        (expression
          (primitive_value
            (number))))
      (expression
        (binary_expression
          (expression
            (identifier))
          (less_than_or_equal)
          (expression
            (primitive_value
              (number)))))
      (statement
        (reassignment
          (identifier)
          (assign)
          (expression
            (binary_expression
              (expression
                (identifier))
              (plus)
              (expression
                (primitive_value
                  (number)))))))
      (block
        (statement
          (expression
            (identifier)))))))

==================
For In Loop
==================

for item in items {
	foo_bar(item)
}

for cell in (b.cells) {}

---

(program
  (statement
    (for_in_loop
      (identifier)
      (expression
        (identifier))
      (block
        (statement
          (expression
            (function_call
              (identifier)
              (paren_arguments
                (expression
                  (identifier)))))))))
  (statement
    (for_in_loop
      (identifier)
      (expression
        (paren_expression
          (expression
            (member_access
              (expression
                (identifier))
              (period)
              (identifier)))))
      (block))))
